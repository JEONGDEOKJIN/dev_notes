// import React, { useState } from "react";
// import styles from "./password.module.css";
// import { FormProvider, useForm } from "react-hook-form";
// import { useHistory } from "react-router-dom";

// type FindPasswordFormData = {
//   findPassword_name: string;
//   findPassword_email: string;
//   findPassword_authCode: string;
// };

// import { IonButton, IonLabel, IonContent, IonInput, IonPage, IonText, IonAlert } from "@ionic/react";
// import AuthService from "@/src/services/AuthService";
// import { validateAuthCodePattern, validateEmail, validateName } from "@/src/lib/valid";
// import StatusBar from "@/src/components/StatusBar";
// import TitleSection from "../../../Auth/Register/Agreement/_components/TitleSection";
// import SubTitleSection from "../../../Auth/Register/Agreement/_components/SubTitleSection";

// const FindEmailPage: React.FC = () => {
//   const history = useHistory();

//   const [isTouched, setIsTouched] = useState(false);
//   const [isAlertOpen, setIsAlertOpen] = useState<boolean>(false);
//   const [alertHeader, setAlertHeader] = useState<string>("");
//   const [alerSubHeader, setAlertSubHeader] = useState<string>("");
//   const [alertMessage, setAlertMessage] = useState<string>("");

//   const [isValid, setIsValid] = useState<boolean>();
//   const [isEmailValid, setIsEmailValid] = useState<boolean>();
//   const [isNameValid, setIsNameValid] = useState<boolean>();
//   const [isAuthCodeValid, setIsAuthCodeValid] = useState<boolean>();
//   const [isAuthCodePatternValid, setIsAuthCodePatternValid] = useState<boolean>();
//   const [authCodeButtonOpen, setAuthCodeButtonOpen] = useState<boolean>(false);

//   const [emailCredential, setEmailCredential] = useState<string>("");
//   const [authCodeErrorMessage, setAuthCodeErrorMessage] = useState<string>("");

//   const form = useForm<FindPasswordFormData>({
//     mode: "onChange",
//     defaultValues: {
//       findPassword_name: "",
//       findPassword_email: "",
//       findPassword_authCode: "",
//     },
//     shouldFocusError: false,
//   });

//   const handleLogin = () => {
//     history.push("/main");
//   };

//   const { formState, register, getValues, setValue } = form;

//   const onSubmit = async (formData: any) => {
//     try {
//       const response = await AuthService.postUserFindPasswordResult(formData);
//       const { data } = response.data;
//     } catch (e: any) {
//       setIsAlertOpen(true); // alert Ï∞Ω Ïó¥Í∏∞
//       setAlertHeader("Î°úÍ∑∏Ïù∏");
//       setAlertMessage(e.response.data.message); // Î∞±ÏóîÎìúÏóêÏÑú Î≥¥ÎÇ¥Ï£ºÎäî ÏóêÎü¨ Î©îÏãúÏßÄ
//     }
//   };

//   const onError = (error: any) => {
//     const key = Object.keys(error)[0];
//     console.log(error[key].message);
//   };

//   const markTouched = () => {
//     setIsTouched(true);
//   };

//   // Ïù∏Ï¶ùÏΩîÎìú Î≥¥ÎÇ¥Í∏∞ (‚úÖ‚úÖ Ïù¥Í≤å Î∞òÎ≥µÎê® | refactor Ïª§Ïä§ÌÖÄ ÌõÖÏúºÎ°ú ÎßåÎìúÎÇò? )
//   const sendAuthCode = async (email: any) => {
//     if (!email) {
//       setIsAlertOpen(true); // alertÏ∞Ω ÎùÑÏö∞Í∏∞
//       setAlertHeader("Ïù∏Ï¶ù");
//       setAlertMessage("Ïù¥Î©îÏùºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî");
//     }

//     if (!validateEmail(email)) {
//       setIsAlertOpen(true); // alertÏ∞Ω ÎùÑÏö∞Í∏∞
//       setAlertHeader("Ïù∏Ï¶ù Î©îÏùº");
//       setAlertMessage("Ïò¨Î∞îÎ•¥ÏßÄ ÏïäÎäî Î©îÏùºÏ£ºÏÜå ÏûÖÎãàÎã§.");
//     }

//     try {
//       const response = await AuthService.postUserRegisterEmail({ email });
//       console.log("sendAuthCode responseüëâ", response);
//       const { credential } = response.data.data;

//       if (credential) {
//         setEmailCredential(credential); // [‚úÖTODO] credentialÍ∞íÏùÑ Î∞±ÏóîÎìúÎ°ú Î∂ÄÌÑ∞ Î∞õÏùå. ÏïîÌò∏ÌôîÎêú Í∞íÏù∏Í∞Ä?
//         console.log("Ïù∏Ï¶ùÎ©îÏùº Î≥¥ÎÇ¥Í∏∞ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïãú, credential Í∞í : ", credential);
//         setAuthCodeButtonOpen(true); // Ïù∏Ï¶ùÎ≤àÌò∏ ÌôïÏù∏ Î≤ÑÌäº ÌôúÏÑ±Ìôî
//         setIsAlertOpen(true); // alertÏ∞Ω ÎùÑÏö∞Í∏∞
//         setAlertHeader("Ïù∏Ï¶ùÎ©îÏùº");
//         setAlertMessage("Ïù∏Ï¶ùÏΩîÎìúÎ•º Î©îÏùºÎ°ú Î≥¥ÎÉàÏäµÎãàÎã§.");
//       }
//     } catch (e: any) {
//       setIsAlertOpen(true); // alertÏ∞Ω ÎùÑÏö∞Í∏∞
//       setAlertHeader("Ïù∏Ï¶ùÎ©îÏùº");
//       setAlertMessage(e.response.data.message); // Î∞±ÏóîÎìúÏóêÏÑú Î≥¥ÎÇ¥Ï£ºÎäî ÏóêÎü¨ Î©îÏãúÏßÄ
//     }
//   };

//   // Ïù∏Ï¶ùÏΩîÎìú ÌôïÏù∏ (‚úÖ‚úÖ Ïù¥Í≤å Î∞òÎ≥µÎê® | refactor Ïª§Ïä§ÌÖÄ ÌõÖÏúºÎ°ú ÎßåÎìúÎÇò? )
//   const checkAuthCode = async (authCode: any) => {
//     alert("ÏûÑÏãúÎ°ú Í≤ÄÏ¶ù true Ï≤òÎ¶¨")
//     setIsAuthCodeValid(true);

//     // ÏÇ¨Ïö©ÏûêÍ∞Ä Í∏∞Ïû¨Ìïú Ïù∏Ï¶ùÎ≤àÌò∏ Í∞ÄÏ†∏Ïò§Í∏∞
//     console.log("Ïù∏Ï¶ùÎ≤àÌò∏ ÌôïÏù∏ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïãú, ÏÇ¨Ïö©ÏûêÍ∞Ä Í∏∞Ïû¨Ìïú Ïù∏Ï¶ùÎ≤àÌò∏ : ", authCode);
//     try {
//       const response = await AuthService.postUserRegisterEmailResult({
//         auth_code: authCode,
//         credential: emailCredential, // Ïù¥Î©îÏùº Ïù∏Ï¶ù ÏöîÏ≤≠Ìï† Îïå, credential Í∞íÏùÑ Î∞õÏùå
//       });

//       console.log("checkAuthCode responseüëâ", response);

//       if (response.data.code === 200) {
//         // credential2 Í∞í Î∞õÍ≥† -> ÏÉÅÌÉú Î≥ÄÏàò Ï†ÄÏû• -> Ïù¥Í±∏, ÌöåÏõêÍ∞ÄÏûÖ Îïå Î≥¥ÎÇ¥Í∏∞
//         const { credential2 } = response.data.data;
//         setValue("findPassword_authCode", credential2);
//         setIsAlertOpen(true); // alertÏ∞Ω ÎùÑÏö∞Í∏∞
//         setAlertHeader("Ïù∏Ï¶ùÎ©îÏùº");
//         setAlertMessage("Î©îÏùº Ïù∏Ï¶ùÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.");
//         setIsAuthCodeValid(true);
//       }
//     } catch (e: any) {
//       setAuthCodeErrorMessage(e.response.data.message);
//     }
//   };

//   // Ï†ÑÏ≤¥ form ÌïÑÎìú Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
//   const validate = (ev: Event, type: string) => {
//     const value = (ev.target as HTMLInputElement).value;
//     setIsValid(undefined);

//     if (value === "") return;

//     if (type === "findPassword_name") {
//       validateName(value) === true ? setIsNameValid(true) : setIsNameValid(false);
//     }
//     if (type === "findPassword_email") {
//       validateEmail(value) === true ? setIsEmailValid(true) : setIsEmailValid(false);
//     }
//     if (type === "findPassword_authCode") {
//       validateAuthCodePattern(value) === true ? setIsAuthCodePatternValid(true) : setIsAuthCodePatternValid(false);
//     }
//   };

//   return (
//     <IonPage>
//       <StatusBar />
//       <TitleSection title="ÎπÑÎ∞ÄÎ≤àÌò∏ Ï∞æÍ∏∞">
//         <div onClick={() => history.goBack()} className={styles.chevronBack} />
//       </TitleSection>
//       <SubTitleSection fontWeight="400" title="ÎπÑÎ∞ÄÎ≤àÌò∏ Ï∞æÍ∏∞ ÌéòÏù¥ÏßÄ ÏûÖÎãàÎã§." />
//       {/* alert Í≤ΩÍ≥†Ï∞Ω */}
//       <IonAlert
//         isOpen={isAlertOpen}
//         header={alertHeader}
//         subHeader={alerSubHeader}
//         message={alertMessage}
//         buttons={["ÌôïÏù∏"]}
//         onDidDismiss={() => setIsAlertOpen(false)}
//       ></IonAlert>

//       <IonContent className="ion-padding">
//         <FormProvider {...form}>
//           <form onSubmit={form.handleSubmit(onSubmit, onError)}>
//             <section className={styles.layout}>
//               {/* 1. Ïù¥Î¶Ñ */}
//               <article className={`${styles.inputWrapDefault}`}>
//                 <IonLabel
//                   style={{
//                     fontWeight: "600",
//                     fontSize: "15px",
//                     marginBottom: "8px",
//                   }}
//                 >
//                   Ïù¥Î¶Ñ
//                 </IonLabel>
//                 <div>
//                   <IonInput
//                     class={`${styles.ionInputDefault}`} // Í∏∞Î≥∏ default CSS Îäî class | ÏÉÅÌÉú Î≥ÄÍ≤ΩÏóê Îî∞Î•∏ ÎèôÏ†Å CSS Îäî className
//                     className={` 
//                   ${isNameValid && `ion-valid`} 
//                   ${isNameValid === false && "ion-invalid"} 
//                 `}
//                     placeholder="Ïù¥Î¶ÑÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî."
//                     type="text"
//                     // errorText={`${isNameValid == false && "Ïù¥Î¶ÑÏùÄ 15Í∏ÄÏûê ÎØ∏Îßåüìõüìõ"}`} // ÏóêÎü¨ Î©îÏãúÏßÄ Ï†úÍ±∞. Î≥ÑÎèÑÎ°ú ÏÉùÏÑ±
//                     onIonInput={(event) => validate(event, "findPassword_name")}
//                     onIonBlur={() => markTouched()}
//                     {...register("findPassword_name", { required: true })}
//                   />
//                   {isNameValid == false && (
//                     <IonText className={styles.warning}>Ïù¥Î¶ÑÏùÄ 15Í∏ÄÏûê ÎØ∏ÎßåÏúºÎ°ú ÏûëÏÑ±Ìï¥Ï£ºÏÑ∏Ïöî.</IonText>
//                   )}
//                 </div>

//                 {/* [Ïù¥Ï†Ñ Ïù¥Î¶Ñ INPUT] */}
//                 {/* <IonInput
//                     className={`${isNameValid && "ion-valid"} ${
//                       isNameValid === false && "ion-invalid"
//                     } ${isTouched && "ion-touched"}`} // [‚úÖTODO] ÎîîÏûêÏù∏ ÏàòÏ†ï ÌïÑÏöî | ‚ùì Ïù¥Í±∞ ion-touched Ïù¥Í±∞Ïóê ÎåÄÌïú CSS Ï†ïÏùòÎäî Ïñ¥Îî®ÏßÄ?
//                     // label="Outline input" // [‚úÖTODO] ÎîîÏûêÏù∏ ÏàòÏ†ï ÌïÑÏöî
//                     // labelPlacement="floating" // [‚úÖTODO] ÎîîÏûêÏù∏ ÏàòÏ†ï ÌïÑÏöî
//                     // fill="solid" // [‚úÖTODO] ÎîîÏûêÏù∏ ÏàòÏ†ï ÌïÑÏöî
//                     placeholder="Ïù¥Î¶Ñ"
//                     helperText={isNameValid ? "valid name" : "Enter a valid NAME"} // [ÏÑ§Î™Ö] Î∞ëÏ§Ñ Î∞ëÏóê ÎÇòÏò§Îäî ÏÑ§Î™Ö
//                     type="text"
//                     errorText="Ïù¥Î¶ÑÏùÄ 15Í∏ÄÏûê ÎØ∏Îßåüìõüìõ" // ÏóêÎü¨ Î©îÏãúÏßÄ
//                     onIonInput={(event) => validate(event, "register_name")}
//                     onIonBlur={() => markTouched()}
//                     {...register("findPassword_name", { required: true })}
//                   /> */}
//               </article>

//               {/* 2. Ïù¥Î©îÏùº */}
//               <article className={`${styles.inputWrapDefault}`}>
//                 <IonLabel
//                   style={{
//                     fontWeight: "600",
//                     fontSize: "15px",
//                     marginBottom: "3px",
//                   }}
//                 >
//                   Ïù¥Î©îÏùºÏ£ºÏÜå
//                 </IonLabel>
//                 <div
//                   style={{
//                     width: "100%",
//                     // height: "100px",
//                     display: "flex",
//                     justifyContent: "center",
//                     alignItems: "center",
//                     gap: "6px",
//                   }}
//                 >
//                   <div
//                     style={{
//                       width: "100%",
//                     }}
//                   >
//                     <IonInput
//                       class={`${styles.ionInputDefault}`}
//                       className={`${isEmailValid && `ion-valid`} 
//                       ${isEmailValid === false && "ion-invalid"} 
//                       `}
//                       placeholder="Ïù¥Î©îÏùº Ï£ºÏÜå"
//                       type="email"
//                       // errorText="Ïù¥Î©îÏùº ÌòïÏãùÏùÑ ÎßûÏ∂∞Ï£ºÏÑ∏Ïöî" // ÏóêÎü¨ Î©îÏãúÏßÄ
//                       onIonInput={(event) => validate(event, "findPassword_email")}
//                       onIonBlur={() => markTouched()}
//                       {...register("findPassword_email", { required: true })}
//                     />
//                     {isEmailValid == false && <IonText className={styles.warning}>Ïù¥Î©îÏùº ÌòïÏãùÏùÑ ÎßûÏ∂∞Ï£ºÏÑ∏Ïöî.</IonText>}
//                   </div>

//                   <IonButton
//                     type="button"
//                     className={isEmailValid ? styles.ionInputValid : styles.ionInputNotValid}
//                     disabled={!isEmailValid}
//                     onClick={() => sendAuthCode(getValues("findPassword_email"))}
//                   >
//                     Ïù∏Ï¶ùÎ©îÏùº Ï†ÑÏÜ°
//                   </IonButton>
//                 </div>
//               </article>

//               {/* 3. Ïù∏Ï¶ù ÏΩîÎìú */}
//               <article
//                 className={`${styles.inputWrapDefault} ${isAuthCodePatternValid === false && styles.inputWrapDisabled}  `}
//               >
//                 <IonLabel
//                   style={{
//                     fontWeight: "600",
//                     fontSize: "15px",
//                     marginBottom: "3px",
//                   }}
//                 >
//                   Ïù∏Ï¶ùÏΩîÎìú
//                 </IonLabel>
//                 <div
//                   style={{
//                     width: "100%",
//                     // height: "100px",
//                     display: "flex",
//                     justifyContent: "center",
//                     alignItems: "center",
//                     gap: "6px",

//                   }}
//                 >
//                   <div
//                     style={{
//                       width: "100%",
//                     }}
//                   >
//                     <IonInput
//                       class={`${styles.ionInputDefault}`} // Í∏∞Î≥∏ default CSS Îäî class | ÏÉÅÌÉú Î≥ÄÍ≤ΩÏóê Îî∞Î•∏ ÎèôÏ†Å CSS Îäî className
//                       className={`
//                       ${isAuthCodePatternValid && "ion-valid"} 
//                       ${isAuthCodePatternValid === false && "ion-invalid"}                      `}
//                       placeholder="Ïù∏Ï¶ùÏΩîÎìú ÏûÖÎ†•"
//                       type="text"
//                       // errorText="Ïù∏Ï¶ùÎ≤àÌò∏ ÌòïÏãùÏùÑ ÎßûÏ∂∞Ï£ºÏÑ∏Ïöî üìõüìõ" // ÏóêÎü¨ Î©îÏãúÏßÄ
//                       onIonInput={(event) => validate(event, "findPassword_authCode")}
//                       onIonBlur={() => markTouched()}
//                       {...register("findPassword_authCode", { required: true })}
//                     />
//                     <IonText className={styles.warning}>
//                       {/* [1Îã®Í≥Ñ] API Í≤ÄÏ¶ù Î≥¥ÎÇ¥Í∏∞ Ï†Ñ */}
//                       {authCodeErrorMessage.length === 0 &&
//                         isAuthCodePatternValid == false &&
//                         "Ïù∏Ï¶ùÎ≤àÌò∏ ÌòïÏãùÏùÑ ÎßûÏ∂∞Ï£ºÏÑ∏Ïöî."}
//                       {/* [2Îã®Í≥Ñ] API Í≤ÄÏ¶ù Î≥¥ÎÇ¥Í≥†, ÏóêÎü¨ Î©îÏãúÏßÄÍ∞Ä Î∞úÏÉùÌïú Í≤ΩÏö∞ */}
//                       {authCodeErrorMessage.length > 0 && authCodeErrorMessage}
//                     </IonText>
//                   </div>
//                   <IonButton
//                     type="button"
//                     className={isAuthCodePatternValid ? styles.ionInputValid : styles.ionInputNotValid}
//                     disabled={!isAuthCodePatternValid}
//                     onClick={() => checkAuthCode(getValues("findPassword_authCode"))}
//                   >
//                     {isAuthCodeValid ? "Ïù∏Ï¶ù ÏôÑÎ£å" : "Ïù∏Ï¶ùÏΩîÎìú ÌôïÏù∏"}
//                   </IonButton>
//                 </div>

//               </article>
//             </section>

//             <section
//               style={{
//                 width: "100%",
//               }}
//             >
//               <IonButton
//                 className={isAuthCodeValid ? `${styles.ionFindValid}` : `${styles.ionFindNotValid}`}
//                 disabled={!isAuthCodeValid}
//                 // className={formState.isValid ? `${styles.ionFindValid}` : `${styles.ionFindNotValid}`}
//                 // disabled={formState.isSubmitting || !formState.isValid} // Ïù¥Ï†Ñ Í≤ÄÏ¶ù
//                 expand="block"
//                 onClick={handleLogin}
//               >
//                 ÌôïÏù∏
//               </IonButton>
//             </section>
//           </form>
//         </FormProvider>
//       </IonContent>
//     </IonPage>
//   );
// };

// export default FindEmailPage;
